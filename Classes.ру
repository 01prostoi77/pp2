
#1
class String:
    def __init__(self):
        self.newstr = ""
    def get_string(self):
        self.newstr = input("Write a string: ")
     def upper(self):
         print(self.newstr.upper())
 p1 = String()
 p1.get_string()
 p1.upper()

#2

class Shape:
    def area(self):
        return 0
class Square(Shape):
    def __init__(self, length):
        self.length = length
    def area(self):
        return self.length ** 2
square_obj = Square(int(input("length? ")))
print(f"{square_obj.area()}")
# 3

class rectangle(Shape):
    def __init__(self,leng=0,width=0):
        self.leng=int(input("What is the leng? "))
        self.width=int(input("What is the width? "))
    def area(self):
        return self.leng*self.width
obj=rectangle()
print(obj.area())


#4
class point:
    def __init__(self,x = 0,y = 0):
        self.x = x
        self.y = y
        pos_x = x
        pos_y = y

    def display(self):
        print(tuple((self.x,self.y)))

    def move(self,new_x = 0,new_y = 0):
        self.x = new_x
        self.y = new_y
        pos_x = new_x
        pos_y = new_y
    
    def dist(self,to_x,to_y):
        return (((to_x - self.x) ** 2) + ((to_y - self.y) ** 2)) ** 0.5
    
obj4 = point(2,2)
obj4.display()
obj4.move(1,4)
print(obj4.dist(2,4))

#5
class accont:
    def __init__(self,owner,balance=0):
        self.owner=owner
        self.balance=balance
    def deposit(self,amount):
        self.balance+=amount
        print(f"{self.owner} have: {self.balance}")
    def withdraw(self,amount):
        if self.balance<amount:
            print("{self.owner} cant take money, its too much")
        else:
            self.balance-=amount
            print(f"{self.owner} now ur balance is {self.balance}")
obj=accont("D",1000)
obj.deposit(1000)
obj.withdraw(300)


#6

is_prime = lambda x: x > 1 and all(x % i != 0 for i in range(2, int(x**0.5) + 1))
nums = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13]
prime_numbers = list(filter(is_prime, nums))
print("Prime numbers in the list:", prime_numbers)
